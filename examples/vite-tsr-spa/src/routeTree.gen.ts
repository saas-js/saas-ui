/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as OnboardingRouteImport } from './routes/_onboarding'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as AppRouteImport } from './routes/_app'
import { Route as IndexRouteImport } from './routes/index'
import { Route as OnboardingGettingStartedRouteImport } from './routes/_onboarding/getting-started'
import { Route as AuthLogoutRouteImport } from './routes/_auth/logout'
import { Route as AuthLoginRouteImport } from './routes/_auth/login'
import { Route as AppWorkspaceIndexRouteImport } from './routes/_app/$workspace/index'

const OnboardingRoute = OnboardingRouteImport.update({
  id: '/_onboarding',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingGettingStartedRoute =
  OnboardingGettingStartedRouteImport.update({
    id: '/getting-started',
    path: '/getting-started',
    getParentRoute: () => OnboardingRoute,
  } as any)
const AuthLogoutRoute = AuthLogoutRouteImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => AuthRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)
const AppWorkspaceIndexRoute = AppWorkspaceIndexRouteImport.update({
  id: '/$workspace/',
  path: '/$workspace/',
  getParentRoute: () => AppRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof AuthLoginRoute
  '/logout': typeof AuthLogoutRoute
  '/getting-started': typeof OnboardingGettingStartedRoute
  '/$workspace': typeof AppWorkspaceIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof AuthLoginRoute
  '/logout': typeof AuthLogoutRoute
  '/getting-started': typeof OnboardingGettingStartedRoute
  '/$workspace': typeof AppWorkspaceIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_app': typeof AppRouteWithChildren
  '/_auth': typeof AuthRouteWithChildren
  '/_onboarding': typeof OnboardingRouteWithChildren
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/logout': typeof AuthLogoutRoute
  '/_onboarding/getting-started': typeof OnboardingGettingStartedRoute
  '/_app/$workspace/': typeof AppWorkspaceIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/login' | '/logout' | '/getting-started' | '/$workspace'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/logout' | '/getting-started' | '/$workspace'
  id:
    | '__root__'
    | '/'
    | '/_app'
    | '/_auth'
    | '/_onboarding'
    | '/_auth/login'
    | '/_auth/logout'
    | '/_onboarding/getting-started'
    | '/_app/$workspace/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRoute: typeof AppRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
  OnboardingRoute: typeof OnboardingRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_onboarding': {
      id: '/_onboarding'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof OnboardingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_onboarding/getting-started': {
      id: '/_onboarding/getting-started'
      path: '/getting-started'
      fullPath: '/getting-started'
      preLoaderRoute: typeof OnboardingGettingStartedRouteImport
      parentRoute: typeof OnboardingRoute
    }
    '/_auth/logout': {
      id: '/_auth/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof AuthLogoutRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_app/$workspace/': {
      id: '/_app/$workspace/'
      path: '/$workspace'
      fullPath: '/$workspace'
      preLoaderRoute: typeof AppWorkspaceIndexRouteImport
      parentRoute: typeof AppRoute
    }
  }
}

interface AppRouteChildren {
  AppWorkspaceIndexRoute: typeof AppWorkspaceIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppWorkspaceIndexRoute: AppWorkspaceIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface AuthRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthLogoutRoute: typeof AuthLogoutRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthLogoutRoute: AuthLogoutRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface OnboardingRouteChildren {
  OnboardingGettingStartedRoute: typeof OnboardingGettingStartedRoute
}

const OnboardingRouteChildren: OnboardingRouteChildren = {
  OnboardingGettingStartedRoute: OnboardingGettingStartedRoute,
}

const OnboardingRouteWithChildren = OnboardingRoute._addFileChildren(
  OnboardingRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRoute: AppRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
  OnboardingRoute: OnboardingRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
